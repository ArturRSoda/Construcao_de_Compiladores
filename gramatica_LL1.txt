PROGRAM -> FUNCLIST | STATEMENT | ϵ

FUNCLIST -> FUNCDEF FUNCLIST'
FUNCLIST' -> FUNCDEF FUNCLIST' | ϵ

FUNCDEF -> def ident ( PARAMLIST ) { STATELIST }

PARAMLIST -> PARAM PARAMLIST' | ϵ
PARAMLIST' -> , PARAM PARAMLIST' | ϵ
PARAM -> int ident | float ident | string ident

STATEMENT -> VARDECL ; | ATRIBSTAT ; | PRINTSTAT ; | READSTAT ; | RETURNSTAT ; | IFSTAT | FORSTAT | { STATELIST } | break ; | ;

STATELIST -> STATEMENT STATELIST' | ϵ
STATELIST' -> STATEMENT STATELIST' | ϵ

VARDECL -> int ident NU | float ident NU | string ident NU
NU -> [ int_constant ] NU | ϵ

ATRIBSTAT -> LVALUE = ATRIBSTAT'
ATRIBSTAT' -> EXPRESSION | ALLOCEXPRESSION

LVALUE -> ident NC
NC -> [ NUMEXPRESSION ] NC | ϵ

PRINTSTAT -> print EXPRESSION
READSTAT -> read LVALUE
RETURNSTAT -> return

IFSTAT -> if ( EXPRESSION ) STATEMENT IFSTAT'
IFSTAT' -> else STATEMENT | ϵ

FORSTAT -> for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT

EXPRESSION -> NUMEXPRESSION EXPRESSION'
EXPRESSION' -> < NUMEXPRESSION | > NUMEXPRESSION | <= NUMEXPRESSION | >= NUMEXPRESSION | == NUMEXPRESSION | != NUMEXPRESSION | ϵ

NUMEXPRESSION -> TERM NT
NT -> + TERM NT | - TERM NT | ϵ

TERM -> UNARYEXPR NQ
NQ -> * UNARYEXPR NQ | / UNARYEXPR NQ | % UNARYEXPR NQ | ϵ

UNARYEXPR -> + FACTOR | - FACTOR | FACTOR

FACTOR -> int_constant | float_constant | string_constant | null | LVALUE | ( NUMEXPRESSION ) | FUNCCALL

FUNCCALL -> ident ( PARAMLISTCALL )
PARAMLISTCALL -> ident PARAMLISTCALL' | ϵ
PARAMLISTCALL' -> , ident PARAMLISTCALL' | ϵ

ALLOCEXPRESSION -> new ALLOCEXPRESSION'
ALLOCEXPRESSION' -> int [ NUMEXPRESSION ] ND | float [ NUMEXPRESSION ] ND | string [ NUMEXPRESSION ] ND
ND -> [ NUMEXPRESSION ] ND | ϵ
