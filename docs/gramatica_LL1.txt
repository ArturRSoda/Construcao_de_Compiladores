PROGRAM -> STATEMENT | FUNCLIST | ϵ
FUNCLIST -> FUNCDEF FUNCLIST'
FUNCDEF -> def indent ( PARAMLIST ) { STATELIST }
PARAMLIST -> string ident PARAMLIST''' | float ident PARAMLIST'' | int ident PARAMLIST' | ϵ
STATEMENT -> VARDECL ; | ATRIBSTAT ; | PRINTSTAT ; | READSTAT ; | RETURNSTAT ; | IFSTAT | FORSTAT | { STATELIST } | break ; | ;
VARDECL -> int ident NU | float ident NU | string ident NU
NU -> [ int_constant ] NU | ϵ
ATRIBSTAT -> LVALUE = ATRIBSTAT'
FUNCCALL -> ident ( PARAMLISTCALL )
PARAMLISTCALL -> ident PARAMLISTCALL' | ϵ
PRINTSTAT -> print EXPRESSION
READSTAT -> read LVALUE
RETURNSTAT -> return
IFSTAT -> if ( EXPRESSION ) STATEMENT IFSTAT'
FORSTAT -> for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
STATELIST -> int ident NU ; STATELIST' | float ident NU ; STATELIST' | string ident NU ; STATELIST' | LVALUE = ATRIBSTAT' ; STATELIST' | print EXPRESSION ; STATELIST' | read LVALUE ; STATELIST' | return ; STATELIST' | if ( EXPRESSION ) STATEMENT IFSTAT' STATELIST' | for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST' | { STATELIST } STATELIST' | break ; STATELIST' | ; STATELIST'
ALLOCEXPRESSION -> new ALLOCEXPRESSION'
ND -> [ NUMEXPRESSION ] ND | ϵ
EXPRESSION -> NUMEXPRESSION EXPRESSION'
NUMEXPRESSION -> TERM NT
NT -> + TERM NT | - TERM NT | ϵ
TERM -> UNARYEXPR NQ
NQ -> * UNARYEXPR NQ | / UNARYEXPR NQ | % UNARYEXPR NQ | ϵ
UNARYEXPR -> FACTOR | + FACTOR | - FACTOR
FACTOR -> int_constant | float_constant | string_constant | null | LVALUE | ( NUMEXPRESSION )
LVALUE -> ident NC
NC -> [ NUMEXPRESSION ] NC | ϵ
FUNCLIST' -> def indent ( PARAMLIST ) { STATELIST } FUNCLIST' | ϵ
PARAMLIST' -> , PARAMLIST | ϵ
PARAMLIST'' -> , PARAMLIST | ϵ
PARAMLIST''' -> , PARAMLIST | ϵ
ATRIBSTAT' -> int_constant NQ NT EXPRESSION' | float_constant NQ NT EXPRESSION' | string_constant NQ NT EXPRESSION' | null NQ NT EXPRESSION' | ( NUMEXPRESSION ) NQ NT EXPRESSION' | + FACTOR NQ NT EXPRESSION' | - FACTOR NQ NT EXPRESSION' | new ALLOCEXPRESSION' | ident ATRIBSTAT''
ATRIBSTAT'' -> ( PARAMLISTCALL ) | NC NQ NT EXPRESSION' | ϵ
PARAMLISTCALL' -> , PARAMLISTCALL | ϵ
IFSTAT' -> else STATEMENT | ϵ
STATELIST' -> int ident NU ; STATELIST' | float ident NU ; STATELIST' | string ident NU ; STATELIST' | ident NC = ATRIBSTAT' ; STATELIST' | print EXPRESSION ; STATELIST' | read LVALUE ; STATELIST' | return ; STATELIST' | if ( EXPRESSION ) STATEMENT IFSTAT' STATELIST' | for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT STATELIST' | { STATELIST } STATELIST' | break ; STATELIST' | ; STATELIST' | ϵ
ALLOCEXPRESSION' -> int [ NUMEXPRESSION ] ND | float [ NUMEXPRESSION ] ND | string [ NUMEXPRESSION ] ND
EXPRESSION' -> ϵ | < NUMEXPRESSION | > NUMEXPRESSION | <= NUMEXPRESSION | >= NUMEXPRESSION | == NUMEXPRESSION | != NUMEXPRESSION
