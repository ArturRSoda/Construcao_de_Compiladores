PROGRAM -> STATEMENT | FUNCLIST | ϵ
FUNCLIST -> FUNCDEF FUNCLIST | FUNCDEF
FUNCDEF -> def indent ( PARAMLIST ) { STATELIST }
PARAMLIST -> int ident , PARAMLIST |  float ident , PARAMLIST |  string ident , PARAMLIST | int ident | float ident | string ident | ϵ
STATEMENT -> VARDCL ; | ATRIBSTAT ; | PRINTSTAT ; | READSTAT ; | RETURNSTAT ; | IFSTAT | FORSTAT | { STATLIST } | break ; | ;
VARDECL -> int ident NU | float ident NU | string ident NU
NU -> [ int_constant ] NU | ϵ
ATRIBSTAT -> LVALUE = EXPRESSION | LVALUE = ALLOCEXPRESSION | LVALUE = FUNCCALL
FUNCCALL -> ident ( PARAMLISTCALL )
PARAMLISTCALL -> ident , PARAMLISTCALL | ident | ϵ
PRINTSTAT -> print EXPRESSION
READSTAT -> read LVALUE
RETURNSTAT -> return
IFSTAT -> if ( EXPRESSION ) STATEMENT else STATEMENT | if ( EXPRESSION ) STATEMENT
FORSTAT -> for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
STATELIST -> STATEMENT STATELIST | STATEMENT
ALLOCEXPRESSION -> new int [ NUMEXPRESSION ] ND | new float [ NUMEXPRESSION ] ND | new string [ NUMEXPRESSION ] ND
ND -> [ NUMEXPRESSION ] ND | ϵ
EXPRESSION -> NUMEXPRESSION | NUMEXPRESSION < NUMEXPRESSION | NUMEXPRESSION > NUMEXPRESSION | NUMEXPRESSION <= NUMEXPRESSION | NUMEXPRESSION >= NUMEXPRESSION | NUMEXPRESSION == NUMEXPRESSION | NUMEXPRESSION != NUMEXPRESSION
NUMEXPRESSION -> TERM NT
NT -> + TERM NT | - TERM NT | ϵ
TERM -> UNARYEXPR NQ
NQ -> * UNARYEXPR NQ | / UNARYEXPR NQ | % UNARYEXPR NQ | ϵ
UNARYEXPR -> FACTOR | + FACTOR | - FACTOR
FACTOR -> int_constant | float_constant | string_constant | null | LVALUE | ( NUMEXPRESSION )
LVALUE -> ident NC
NC -> [ NUMEXPRESSION ] NC | ϵ